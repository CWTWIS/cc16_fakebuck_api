### Authentication ###
POST/auth/register register a new user
REQUEST BODY
{
    firstName*          String      user first name
    lastName*           String      user last name
    emailOrMobile*      String      email address or mobile number
    password*           String      password must contains only alphabet
    confirmPassword*    String      confirm password must match a password
}
RESPONSE
201
{
    accessToken         String      user token
    user(newUser)       object      user object without password
}
400
{
    message             String      client error message
}
500
{
    message             String      server error message
}

POST/auth/login         login
REQUEST BODY
{
    emailOrMobile*      String      email address or mobile number
    password*           String      user password
}
RESPONSE
200
{
    accessToken         String      user token
    user                object      user object without password
}
400
{
    message             String      client error message
}
500
{
    message             String      server error message
}

GET        /auth/me            get Authenticated user data
HEADERS
    AUTHORIZATION   Bearer [JWT]
RESPONSE
200 {user: {id, firstName, lastName, email, mobile, profileImage, coverImage, createdAt, updatedAt}}
401 {message: 'unauthenticated'}
500 {message: 'internal server error'}

PATCH /users       update user profile
HEADERS
    AUTHORIZATION   Bearer [JWT]
REQUEST BODY        multipart/form-data
    profileImage?   
    coverImage?
RESPONSE
200 {profileImage: 'https://', coverImage: 'https://' }
400 {message: 'unexpected field'}
401 {message: 'unauthenticated'}
500 {message: 'internal server error'}

GET     /users/:targetUserId/profile
HEADERS
    AUTHORIZATION   Bearer [JWT]
RESPONSE
200 {profileUser: profileUserFriends, relationshipToAuthUser }
400 {message: 'unexpected field'}
401 {message: 'unauthenticated'}
500 {message: 'internal server error'}

POST    /relationships/users/:targetUserId       request new friend
PATCH   /relationships/users/:targetUserId/confirm       accept request      1 ===> 5
PATCH   /relationships/users/:targetUserId/reject       reject request
PATCH   /relationships/users/:targetUserId/cancel       cancel request
PATCH   /relationships/users/:targetUserId/unfriend       unfriend
HEADERS
    AUTHORIZATION   Bearer[JWT]
REQUEST BODY
    target user
RESPONSE
200 {message: 'success request'}
400 {message: 'invalid relationships between 2 users'}
401 {message: 'unauthenticated'}
403 {message: 'cannot accept your request'} 
500 {message: 'internal server error'}

POST        /posts      create a new posts
HEADERS
    AUTHORIZATION   Bearer[JWT]
REQUEST BODY        multipart/form-data
    title?           String (at least 1 of title or image)
    image?           blob
RESPONSE
200 {post: new post object}
400 {message: 'invalid input'}
401 {message: 'unauthenticated'}
500 {message: 'internal server error'}